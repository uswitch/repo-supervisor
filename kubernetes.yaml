apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: repo-supervisor
  name: repo-supervisor
  namespace: cloud
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: repo-supervisor
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: repo-supervisor
    spec:
      containers:
      - env:
        - name: HOST
          value: 0.0.0.0
        - name: GITHUB_TOKEN
          value: {{ .Env.GITHUB_TOKEN }}
        - name: JWT_SECRET
          value: {{ .Env.GITHUB_TOKEN }}
        image: registry.usw.co/uswitch/repo-supervisor:{{ .Env.DRONE_COMMIT }}
        imagePullPolicy: IfNotPresent
        name: repo-supervisor
        ports:
        - containerPort: 7070
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 256M
          requests:
            cpu: 10m
            memory: 128M
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ssl-certs-host
          readOnly: true
        - mountPath: /opt/repo-supervisor/.config.json
          name: supervisor-config-file
          subPath: .config.json
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /usr/share/ca-certificates
          type: ""
        name: ssl-certs-host
      - configMap:
          defaultMode: 420
          name: supervisor-config-file
        name: supervisor-config-file
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: repo-supervisor
  namespace: cloud
spec:
  ports:
  - port: 80
    targetPort: 7070
    protocol: TCP
  selector:
    app: repo-supervisor
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: repo-supervisor
  namespace: cloud
  annotations:
    kubernetes.io/ingress.class: external
spec:
  rules:
  - host: repo-supervisor.usw.co
    http:
      paths:
      - backend:
          serviceName: repo-supervisor
          servicePort: 80
        path: /
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: supervisor-config-file
  namespace: cloud
data:
  .config.json: |
    { "SlackURL": "{{ .Env.SLACK_WEBHOOK }}" }
